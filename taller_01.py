# -*- coding: utf-8 -*-
"""Taller_01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pykmgYUZA_txmDcN6yHq3qosAWbrKARS

<h1 align="center">Taller 01 - Programación Básica en Python</h1>

Para los siguientes ejercicios realice el modelaje y el programa en Python que soluciona el problema en cuestión.

## Ejercicio 01

Realice el modelaje y el programa en Python que resuelva el siguiente problema:

> Una tienda de licores compra a su distribuidor cajas de vino que luego vende por botellas. Dado una caja de vino que tiene un costo $c$ y contiene 
> $n$ botellas, se desea calcular el precio $p$ al que se debe vender cada botella, de manera tal que se obtenga un 30% de utilidad sobre el costo 
> total de las caja.

### Modelaje

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Costo|c|float
Cantidad|n|int


**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Precio|p|float
"""

# Programa en Python que resuelve el Ejercicio 01

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida

# 3. Mostrar los datos de salida
c=float(input("Digite costo: "))
n=int(input("Digite cantidad: "))
p=(c/n)*1.3
print("El precio TOTAL es:",p)

"""---

## Ejercicio 02

Relice el modelaje y el programa en Python que resuelve el siguiente problema:

> Se sabe que un profesor universitario contratado como catedrático, dedica una hora a
> preparar una clase de dos horas y por cada cuatro horas de clase desarrolladas hace una
> evaluación, la cual le toma dos horas calificar. Si al docente se le asigna un curso de $n$ horas
> al semestre, ¿cuántas horas trabajará en total?

### Modelaje

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Horas|n|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Horas totales|ht|float
"""

# Programa en Python que resuelve el Ejercicio 02

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida

# 3. Mostrar los datos de salida
n=float(input("Cuantas horas al semestre: "))
hc=n/2
he = 0
if n % 4==0:
    he=he+2
else:
    he=0
ht=hc+he
print("Horas totales trabajadas:",ht)

"""---

## Ejercicio 03

Relice el modelaje y el programa en Python que resuelve el siguiente problema:

> Un profesor diseña un examen con $n$ preguntas, estima que para calificar cada
> pregunta requiere $m$ minutos. Si el examen se aplica a $m$ estudiantes, cuánto
> tiempo (horas y minutos) necesita para calificar todos los exámenes.

### Modelaje

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Preguntas|n|int
Minutos|m|float
Estudiantes|p|int

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Horas|hora|int
Minutos|minutos|int
Tiempo total|tp|float
"""

# Programa en Python que resuelve el Ejercicio 03

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida

# 3. Mostrar los datos de salida
n=int(input("cuantas preguntas: "))
m=float(input("cuantos minutos por pregunta: "))
p=int(input("cuantos estudiantes: "))
tp=(n*m)*p
hora=tp//60
minutos=tp%60
print("el tiempo total es",hora,"horas y",minutos,"minutos")

"""---

## Ejercicio 04

Realice el modelaje y el programa en Python que resuelva el siguiente problema:

> Tres personas deciden invertir su dinero para fundar una empresa. Cada una de ellas
> invierte una cantidad distinta. Obtener el porcentaje que cada cual invierte con
> respecto a la cantidad total invertida.

### Modelaje

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Inversion persona 1|p1|float
Inversion persona 2|p2|float
inversion persona 3|p3|float


**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Porcentaje persona 1|p1s|float
Porcentahe persona 2|p2s|float
Porcentaje persona 3|p3s|float
Sumatoria|s|float
Porcentaje|p|float
"""

# Programa en Python que resuelve el Ejercicio 04

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida

# 3. Mostrar los datos de salida
p1=float(input("Ingrese la inversion(Inversionista 1)"))
p2=float(input("Ingrese la inversion(Inversionista 2)"))
p3=float(input("Ingrese la inversion(Inversionista 3)"))
s=p1+p2+p3
p1s = (p1*100)/s
p2s = (p2*100)/s
p3s = (p3*100)/s
print("Sus inversiones correpondientes son: ","Inversionista 1:",p1s,"Inversionista 2:",p2s,"Inversionista 3:",p3s)

"""---

## Ejercicio 05

Realice el modelaje y el programa en Python que resuelva el siguiente problema:

> Un estudiante desea saber cuál será su calificación final en Programación. Dicha
> calificación se compone del promedio de tres notas parciales. Cada nota parcial se
> obtiene a partir de un taller, una evaluación teórica y una evaluación práctica. Los
> talleres equivalen al 25% de la nota del parcial, las evaluaciones teóricas al 35% y las
> evaluaciones prácticas al 40%.

### Modelaje

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Taller1|t1|float
Evaluacion teorica1|et1|float
Evaluacion practia1|ep1|float
Taller2|t2|float
Evaluacion teorica2|et2|float
Evaluacion practica2|ep2|float
Taller3|t3|float
Evaluacion teorica3|et3|float
Evaluacion practica3|ep3|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Calificacion final|pt|float
"""

# Programa en Python que resuelve el Ejercicio 05

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida

# 3. Mostrar los datos de salida
t1=float(input("Nota taller: "))
et1=float(input("Nota evaluacion teorica: "))
ep1=float(input("Nota evaluacion practica: "))

pp1=((((t1*25)/100)+((et1*35)/100)+((ep1*40)/100))/3)
print(pp1)

t2=float(input("Nota taller: "))
et2=float(input("Nota evaluacion teorica: "))
ep2=float(input("Nota evaluacion practica: "))

pp2=((((t2*25)/100)+((et2*35)/100)+((ep2*40)/100))/3)
print(pp2)

t3=float(input("Nota taller: "))
et3=float(input("Nota evaluacion teorica: "))
ep3=float(input("Nota evaluacion practica: "))

pp3=((((t3*25)/100)+((et3*35)/100)+((ep3*40)/100))/3)
print(pp3)

pt=pp1+pp2+pp3
print("\nSu calificacion final es:",pt)

"""---

## Ejercicio 06

Realice el modelaje y el programa en Python que resuelve el siguiente problema:

> Leer un número entero de cuatro dígitos y separar sus dígitos en: miles, centenas, decenas y unidades.

### Modelaje

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Numero|n|int

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Miles|m|int
Centenas|c|int
Decenas|d|int
Unidades|u|int
"""

# Programa en Python que resuelve el Ejercicio 06

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida

# 3. Mostrar los datos de salida
n= int(input("Dame un numero entero de 4 digitos"))
m = n / 1000
tmp = n % 1000
c = tmp / 100
tmp = tmp % 100
d = tmp / 10
u = tmp % 10
print ("Miles: %i" % m)
print ("Centenas: %i" % c)
print ("Decenas: %i" % d)
print ("Unidades: %i" % u)

"""---

## Ejercicio 07

Escriba el modelaje y el programa en Python que resuelva el siguiente problema:

> Las utilidades de una empresa se distribuyen entre tres socios así: socio A = 40%,
> socio B = 25% y socio C = 35%. Dada una cantidad de dinero ¿cuánto corresponderá
> a cada uno?

### Modelaje

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Utiliades|u|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Socio A|sa|float
Socio B|sb|float
Socio C|sc|float
"""

# Programa en Python que resuelve el Ejercicio 07

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida

# 3. Mostrar los datos de salida
u=float(input("Cuantas utilidades:"))
sa=((u*40)/100)
sb=((u*25)/100)
sc=((u*35)/100)
print("Al socio A le corresponde:",sa)
print("Al socio B le corresponde:",sb)
print("Al socio C le corresponde:",sc)

"""---

## Ejercicio 08

Realice el modelaje y el programa en Python que resuelva el siguiente problema:

> Calcular el área y el perímetro de un rectángulo de altura $a$ y base $b$.

![area rectangulo](https://calculo.cc/temas/temas_geometria/perimetro_area/imagenes/teoria/perim_area/rectangulo.gif)

### Modelaje

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Altura|a|float
Base|b|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Perimetro|P|float
Area|A|float
"""

# Programa en Python que resuelve el Ejercicio 08

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida

# 3. Mostrar los datos de salida
a=float(input("Dame la altura: "))
b=float(input("Dame la base: "))
P=((2*b)+(2*a))
A=(b*a)
print("El perimetro es:",P)
print("El area es:",A)

"""---

## Ejercicio 09

Escriba el modelaje y un programa en Python que resuelva el siguiente problema:

> Un vendedor recibe un 10% de comisión sobre sus ventas. Si en
> un mes cualquiera hace tres ventas por valores diferentes ¿cuánto recibirá por
> comisión en cada una de las ventas? y ¿cuánto en total?

### Modelaje

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Venta 1|v1|float
Venta 2|v2|float
Venta 3|v3|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Comision 1|cv1|float
Comision 2|cv2|float
Comision 3|cv3|float
Comision total|ct|float
"""

# Programa en Python que resuelve el Ejercicio 09

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida

# 3. Mostrar los datos de salida
v1=float(input("Dame el valor de la primera venta: "))
cv1=((v1*10)/100)
v2=float(input("Dame el valor de la segunda venta: "))
cv2=((v2*10)/100)
v3=float(input("Dame el valor de la tercera venta: "))
cv3=((v3*10)/100)
print("El valor de la comision por tu venta es:",cv1)
print("El valor de la comision por tu venta es:",cv2)
print("El valor de la comision por tu venta es:",cv3)
ct=cv1+cv2+cv3
print("La comision total es:",ct)

"""---

## Ejercicio 10

Escriba el modelaje y un programa en Python que resuelva el siguiente problema:

> Una tienda vende tres tipos diferentes de productos: los productos tipo ‘A’ que cuestan cada uno 1000 pesos; los productos tipo ‘C’, que cuesta cada uno dos mil quinientos pesos y los productos tipo ‘Z’, donde cada uno cuesta tres mil pesos. Queremos que a partir del número de productos que compraron de cada tipo de producto en un día, determine el valor total recolectado por la tienda gracias a la venta de esos productos en el día.

### Modelaje

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Producto A|A|int
Producto C|C|int
Producto Z|Z|int

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Valor total|vt|int
"""

# Programa en Python que resuelve el Ejercicio 10

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida

# 3. Mostrar los datos de salida
A=int(input("Cuantos productos: "))
C=int(input("Cuantos productos: "))
Z=int(input("Cuantos productos: "))
vt= (A*1000)+(C*2500)+(Z*3000)
print("El valor total recolectado es:",vt)

"""---

## Ejercicio 11

Solucione el mismo problema del Ejercicio 10, pero construya una función que resuelva el problema y luego **use la función** en el programa.

### Modelaje de la función

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Producto A|A|int
Producto C|C|int
Producto Z|Z|int

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Valor total|vt|int
"""

# Definición de la función
def nombre(datos de entrada)->datos de salida:
    # Calcular los datos de salida
    return datos de salida

# Programa en Python que resuelve el Ejercicio 11

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida, USANDO LA FUNCIÓN

# 3. Mostrar los datos de salida
def tienda()->int:
    A=int(input("Cuantos productos: "))
    C=int(input("Cuantos productos: "))
    Z=int(input("Cuantos productos: "))
    vt= (A*1000)+(C*2500)+(Z*3000)
    print("El valor total recolectado es:",vt)
tienda()

"""---

## Ejercicio 12

Utilizando funciones, escribe el modelaje y un programa en Python que permita obtener el área lateral ($A_L$), el área total ($A_T$) y el volumen de un cono, a partir del valor de la generatriz ($g$), el radio de la base ($r$) y la altura ($h$) del cono. Las fórmulas se presentan en la siguiente figura:

![Un cono](https://cuerpossolidosgeometricos1.files.wordpress.com/2012/03/areacono1.jpg?w=300&h=243)

## Modelaje de la función que halla el Área Lateral

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Generatriz|g|float
Radio de base|r|float


**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Area lateral|l|float
"""

# Si queremos usar pi, debemos incluir esta librería
import math

# Función que permite encontrar el área lateral del cono
def calcular_area_lateral(g:float,r:float)->float:
  l=math.pi*r*g
  return(l)

if __name__ == '__main__':
  print(calcular_area_lateral(10.2,5.0))

"""## Modelaje de la función que halla el Área Total

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Generatriz|g|float
Radio de base|r|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Area total|at|float
"""

# Función que permite encontrar el área total del cono (puede usarse la función anterior)
def calcular_area_total(g:float,r:float)->float:
  at=(math.pi*r*g)+(math.pi*r**2)
  return(at)
if __name__ == '__main__':
  print(calcular_area_total(15.3,8.6))

"""## Modelaje de la función que halla el Volumen

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Generatriz|g|float
Radio de base|r|float
Altura|h|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Volumen|v|float
"""

# Función que permite encontrar el volumen del cono
def calcular_volumen(g:float,r:float,h:float)->float:
  v=((math.pi)*(r**2)*(h)/3)
  return(v)
if __name__ == '__main__':
  print(calcular_volumen(11.6,13.8,17.1))

"""## Modelaje del programa que resuelve el problema

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Generatriz|g|float
Radio|r|float
Altura|h|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Area lateral|al|float
Area total|at|float
Volumen|v|float
"""

# Programa en Python que resuelve el Ejercicio 12

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida, USANDO LAS 3 FUNCIONES ANTERIORES

# 3. Mostrar los datos de salida
g=float(input("Dame la generatriz: "))
r=float(input("Dame el radio: "))
h=float(input("Dame la altura: "))
al=((math.pi)*(r)*(g))
at=((math.pi)*(r)*(g)+(math.pi)*(r**2))
v=((math.pi)*(r**2)*(h)/3)
print("El area lateral es:",al)
print("El area total es:",at)
print("El volumen es:",v)

"""---

## Ejercicio 13

Una empresa constructora vende terrenos con la forma a continuación:

![Ejercicio2](https://bit.ly/EAN190201)

Realice el modelaje, una serie de funciones y el programa en Python que permita obtener el área y perímetro del respectivo terreno. 

Comencemos por realizar una serie de funciones que más tarde utilizaremos en el programa.

Primero una función que halle el área del rectángulo.

## Modelaje de la función que encuentra el área y el perímetro de un rectángulo

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Altura|a|float
Base|b|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Perimetro|P|float
Area|A|float
"""

# Definición de la función que encuentra el área y el perímetro de un rectángulo
def area_perimetro()->float:
    a=float(input("Dame la altura: "))
    b=float(input("Dame la base: "))
    P=((2*b)+(2*a))
    A=(b*a)
    print("El perimetro es:",P)
    print("El area es:",A)
area_perimetro()

"""## Modelaje de la función que encuentra la hipotenusa de un triángulo rectangulo a partir de los catetos

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Cateto 1|c1|float
Cateto 2|c2|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Hipotenusa|h|float
"""

# Definición de la función que encuentra la hipotenusa del tríángulo rectángulo
import math
def hipotenusa()->float:
    c1=float(input("Dame el cateto 1: "))
    c2=float(input("Dame el cateto 2: "))
    h= math.sqrt((c1**2)+(c2**2))
    print(h)
hipotenusa()

"""## Modelaje de la función que encuentra el área y el perímetro de un triángulo rectángulo conociendo los 2 catetos

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Cateto 1|c1|float
Cateto 2|c2|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Perimetro|p|float
Area|a|float
"""

# Función que encuentra el área y perímetro de un triángulo rectángulo a partir de los dos catetos
# Debe usar la función anterior para encontrar el tercer lado del triángulo
import math
def area_perimetroT()->float:
    c1=float(input("Dame el cateto 1: "))
    c2=float(input("Dame el cateto 2: "))
    h= math.sqrt((c1**2)+(c2**2))
    p=c1+c2+h
    a=((c1*c2)/2)
    print("El perimetro del triangulo es:",p)
    print("El area del rectangulo es:",a)
area_perimetroT()

"""## Modelaje de la función que encuentra el área y el perímetro del terreno, a partir de los datos que vemos en la figura

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Lado A|A|float
Lado B|B|float
Lado C|C|float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Area total|Areatotal|float
Perimetro total|PerimetroTotal|float
"""

# Programa en Python que resuelve el Ejercicio 13

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida, USANDO LAS FUNCIONES ANTERIORES (OJO, No necesita usar la de hipotenusa aquí)

# 3. Mostrar los datos de salida
import math
def terreno()->float:

    A=float(input("Dame el valor de A: "))
    B=float(input("Dame el valor de B: "))
    C=float(input("Dame el valor de C: "))

    AR= B*C
    AT=((A-C)*B/2)
    H=math.sqrt(((A-C)**2)+(B**2))

    Areatotal=AR+AT
    PerimetroTotal=A+B+C+H
    print("El area total del terreno es:",Areatotal)
    print("El perimetro total del terreno es:",PerimetroTotal)
terreno()

"""---

## Ejercicio 14

Todo punto del eje cartesiano está descrito por dos elementos: su coordenada $x$ (o «abscisa») y su coordenada $y$ (que también se llama la «ordenada»). Suponga que tenemos las coordenadas $x$ y $y$ de dos puntos: $x_1$ y $y_1$ para el primer punto, y también $x_2$ y $y_2$ para el segundo punto. Queremos encontrar la distancia entre esos dos puntos, pero también la pendiente de la recta que une esos dos puntos, y finalmente, las coordenadas del punto medio entre esos dos puntos.

![Dos punto](https://i2.wp.com/www.celeberrima.com/wp-content/uploads/2018/11/Distancia-entre-dos-puntos-geometr%C3%ADa-anal%C3%ADtica-%E2%80%93-F%C3%B3rmula-y-ejemplos.jpg?resize=768%2C551&ssl=1)

La distancia se obtiene con la siguiente fórmula:

$$
d = \sqrt{(y_2-y_1)^2 + (x_2-x_1)^2}
$$

La pendiente ($m$) de la recta que une los dos puntos se halla a partir de la siguiente fórmula:

$$
m = \frac{y_2-y_1}{x_2-x_1}
$$

Y las coordenadas del punto medio se obtienen con las siguientes fórmulas:
$$
x_m = \frac{x_1+x_2}{2}\\
y_m = \frac{y_1+y_2}{2}
$$

Escriba el modelaje y el programa en Python que permita obtener todos los datos solicitados a partir de las 4 coordenadas. Solucionemos este problema a partir de varias funciones.

## Modelaje de la función que encuentra la distancia entre dos puntos. Tenga en cuenta que hay 4 datos de entrada: x1, y1, x2 y y2.

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Coordenada 1|x1|float
Coordenada 2|y1|float
Coordenada 3|x2|float
Coordenada 4|x21float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Distancia|d|float
"""

# Para poder usar raiz cuadrada, necesitamos incluir la siguiente librería
import math

# Función que halla la distancia entre dos puntos
def distancia()->float:
    x1=float(input("Dame coordenada de x1: "))
    y1=float(input("Dame coordenada de y1: "))
    x2=float(input("Dame coordenada de x2: "))
    y2=float(input("Dame coordenada de y2: "))
    d=math.sqrt(((y2-y1)**2)+((x2-x1)**2))
    print("La distancia es:",d)
distancia()

"""## Modelaje de la función que encuentra la pendiente de la recta que une a los dos puntos. También se reciben las coordenadas de los dos puntos.

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Coordenada 1|x1|float
Coordenada 2|y1|float
Coordenada 3|x2|float
Coordenada 4|x21float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Pendiente|m|float
"""

# Función que halla la pendiente de la recta entre dos puntos
def pendiente()->float:
    x1=float(input("Dame coordenada de x1: "))
    y1=float(input("Dame coordenada de y1: "))
    x2=float(input("Dame coordenada de x2: "))
    y2=float(input("Dame coordenada de y2: "))
    m=((y2-y1)/(x2-x1))
    print("La pendiente es:",m)
pendiente()

"""## Modelaje de la función que encuentra las coordenadas x e y del punto medio de la recta que une dos puntos

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Coordenada 1|x1|float
Coordenada 2|y1|float
Coordenada 3|x2|float
Coordenada 4|x21float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Punto medio|pm|float
"""

# Función que encuentra el punto medio de la recta que une dos puntos
def punto_medio()->float:
    x1=float(input("Dame coordenada de x1: "))
    y1=float(input("Dame coordenada de y1: "))
    x2=float(input("Dame coordenada de x2: "))
    y2=float(input("Dame coordenada de y2: "))
    pm=(((x1+x2)/2)+((y1+y2)/2))
    print("El punto medio es:",pm)
punto_medio

"""## Modelaje del programa que soluciona el problema

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Coordenada 1|x1|float
Coordenada 2|y1|float
Coordenada 3|x2|float
Coordenada 4|x21float

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Distancia|d|float
Pendiente|m|float
Punto medio|pm|float
"""

# Programa en Python que resuelve el Ejercicio 14

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida, USANDO LAS FUNCIONES ANTERIORES (OJO, TODAS LAS FUNCIONES DEBEN SER USADAS)

# 3. Mostrar los datos de salida
import math

x1=float(input("Dame coordenada de x1: "))
y1=float(input("Dame coordenada de y1: "))
x2=float(input("Dame coordenada de x2: "))
y2=float(input("Dame coordenada de y2: "))

d=math.sqrt(((y2-y1)**2)+((x2-x1)**2))
m=((y2-y1)/(x2-x1)) 
pm=(((x1+x2)/2)+((y1+y2)/2))
print("La distancia es:",d)
print("La pendiente es:",m)
print("El punto medio es:",pm)



"""---

# Ejercicio 15

Escriba una función que permita calcular la expansión lineal en una barra de acero a partir de un incremento en la temperatura. La fórmula para encontrar la expansión lineal (llamada $l$) es la siguiente:

![Ejercicio 4](https://latex.codecogs.com/png.latex?%5Cdpi%7B200%7D%20%5Cbg_white%20%5Clarge%20l%20%3D%20l_o%5B1&plus;%5Calpha%20%28T_f%20-T_o%29%5D)

Donde tenemos que:

* $l_o$ es la longitud de la barra de acero a la temperatura inicial $T_o$
* $\alpha$ es el coeficiente de expansión lineal
* $T_f$ es la temperatura final de la barra de acero

## Modelaje de la función

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Longitud incicial|lo|float
Coeficiente de expancion lineal|co|float
Temperatura inicial|to|float
Temperatura final|tf|float


**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Expancion lineal|l|float
"""

# Definición de la función que halle la expansión lineal
def expansion_lineal(lo:float,co:float,to:float,tf:float)->float:
  l=lo*(1+co*(tf-to))
  return(l)

# Escriba un programa que prueba la función anterior

# Programa en Python que resuelve el Ejercicio 15

# 1. Leer los datos de entrada
lo=float(input("Digita longitud inicial: "))
co=float(input("Digita el coeficiente de expancion lineal: "))
to=float(input("Digita la temperatura inicial: "))
tf=float(input("Digita la temperatura final: "))
# 2. Calcular los datos de salida, USANDO LA FUNCIÓN ANTERIOR
if(__name__=='__main__'):
  e=expansion_lineal(lo,co,to,tf)
# 3. Mostrar los datos de salida
  print("La expansion lineal es: ",e)

"""---

## Ejercicio 16

En el nuevo edificio de la universidad, cada piso tendrá el mismo número de salones y suponga que todos los salones del nuevo edificio tendrán el mismo número de pupitres, conocida como la capacidad del salón. Escriba el modelaje, una función y un programa en Python que calcule el número de salones y el número de pisos que tendrá el nuevo edificio a partir de la capacidad del salón y el número de estudiantes que van a sentarse en los pupitres de la universidad a la universidad .

## Modelaje de la función

**Datos de Entrada:**

Nombre | Identificador | Tipo
---|---|---
Capacidad de salon|c|int
Cantidad de estudiantes|e|int
Capacdad de salones por piso|p|int

**Datos de Salida:**

Nombre | Identificador | Tipo
---|---|---
Cantidad de salones|s|int
Cantidad de pisos|n|int
"""

import math

print(math.ceil(26.1))
print(math.floor(26.1))

# Definición de la función
def num_salones_pisos(c:int,e:int,p:int):
  s=e/c
  s=math.ceil(s)
  n=s/p
  n=math.ceil(n)
  return s,n

# Escriba un programa que prueba la función anterior

# Programa en Python que resuelve el Ejercicio 16

# 1. Leer los datos de entrada

# 2. Calcular los datos de salida, USANDO LA FUNCIÓN ANTERIOR

# 3. Mostrar los datos de salida
import math
c= int(input("Capacidad del salon: "))
e=int(input("cantidad de estudiantes: "))
p=int(input("Capacidad de salones por piso: "))
s=e/c
s=math.ceil(s)
n=s/p
n=math.ceil(n)
print("La cantidad de salones es:",s)
print("La cantidad de pisos es:",n)